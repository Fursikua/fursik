
const productGrid = document.querySelector('.product-grid');

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É "–í—Ö—ñ–¥"
const loginButton = document.getElementById('loginButton');
const loginModal = document.getElementById('loginModal');
const closeModal = document.querySelector('.close');

document.getElementById('search-input').addEventListener('input', searchProducts);

const headerContainer = document.querySelector('.header-container'); // –ó–Ω–∞—Ö–æ–¥–∏–º–æ header-container

function searchProducts() {
    const query = document.getElementById('search-input').value.trim().toLowerCase(); // –û—Ç—Ä–∏–º—É—î–º–æ –∑–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    
    // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –∞–±–æ –ø–æ–∫–∞–∑—É—î–º–æ header-container –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ç–µ–∫—Å—Ç—É –≤ –ø–æ–ª—ñ –ø–æ—à—É–∫—É
    if (query !== '') {
        headerContainer.style.display = 'none'; // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ header-container
    } else {
        headerContainer.style.display = 'flex'; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ header-container
    }

    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç–æ–≤–∞—Ä–∏ –∑–∞ –Ω–∞–∑–≤–æ—é –∞–±–æ –æ–ø–∏—Å–æ–º
    const filteredProducts = products.filter(product => 
        product.name.toLowerCase().includes(query) || 
        product.description.toLowerCase().includes(query)
    );

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É
    if (filteredProducts.length === 0) {
        document.getElementById('product-list').innerHTML = '<p>–¢–æ–≤–∞—Ä—ñ–≤ –∑–∞ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>';
    } else {
        renderProducts(filteredProducts); // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ —Ç–æ–≤–∞—Ä–∏
    }
}

loginButton.onclick = function() {
    loginModal.style.display = 'flex';
};

closeModal.onclick = function() {
    loginModal.style.display = 'none';
};

// –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ø—Ä–∏ –∫–ª—ñ–∫—É –∑–∞ –π–æ–≥–æ –º–µ–∂–∞–º–∏
window.onclick = function(event) {
    if (event.target == loginModal) {
        loginModal.style.display = 'none';
    }
};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ª–æ–≥—ñ–Ω–∞ —ñ –ø–∞—Ä–æ–ª—è
function login() {
    const username = document.getElementById('username').value;
    const password = document.getElementById('password').value;

    if (username === 'admin' && password === 'password123') {
        window.location.href = 'admin.html';
    } else {
        alert('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å');
    }
}
// –î–æ–¥–∞–Ω–æ –ø–æ–¥—ñ—é –∑–∞–∫—Ä–∏—Ç—Ç—è –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –º–µ–∂–∞–º–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
document.getElementById('productDetailModal').addEventListener('click', function (event) {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–ª—ñ–∫–Ω—É–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–∞–º–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞, –∞ –Ω–µ –Ω–∞ –π–æ–≥–æ –≤–º—ñ—Å—Ç
    if (event.target === this) {
        closeProductDetailModal();
    }
});


// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ—à–∏–∫–∞
document.getElementById('cart-icon').addEventListener('mouseenter', function () {
    document.getElementById('cart-details').style.display = 'block';  // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∫–æ—à–∏–∫
});

document.getElementById('cart-icon').addEventListener('mouseleave', function () {
    setTimeout(function() {
        document.getElementById('cart-details').style.display = 'none'; // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –∫–æ—à–∏–∫ –ø—ñ—Å–ª—è –∑–∞—Ç—Ä–∏–º–∫–∏
    }, 300); // –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä–∏—Ç—Ç—è–º, —â–æ–± –Ω–µ –∑–∞–∫—Ä–∏—Ç–∏ –æ–¥—Ä–∞–∑—É
});

document.getElementById('cart-details').addEventListener('mouseenter', function () {
    clearTimeout(this.closeTimeout);  // –ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ –Ω–∞ –¥–µ—Ç–∞–ª—ñ –∫–æ—à–∏–∫–∞ —Å–∫–∞—Å–æ–≤—É—î–º–æ –∑–∞—Ç—Ä–∏–º–∫—É
});

document.getElementById('cart-details').addEventListener('mouseleave', function () {
    this.closeTimeout = setTimeout(function() {
        document.getElementById('cart-details').style.display = 'none';  // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –∫–æ—à–∏–∫ —á–µ—Ä–µ–∑ –∑–∞—Ç—Ä–∏–º–∫—É
    }, 300); // –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä–∏—Ç—Ç—è–º
});

function updateCartDisplay() {
    const cart = JSON.parse(localStorage.getItem('cart')) || { items: [], total: 0 };
    const cartItemsDiv = document.getElementById('cart-items');
    const cartTotal = document.getElementById('cart-total');

    cartItemsDiv.innerHTML = ""; // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –¥–∞–Ω—ñ

    if (cart.items.length > 0) {
        cart.items.forEach(item => {
            const itemDiv = document.createElement('div');
            itemDiv.classList.add('cart-item');
            itemDiv.innerHTML = `
                <h3>${item.name}</h3>
                <span>${item.price} –≥—Ä–Ω x ${item.quantity}</span>
                <button class="remove-button" onclick="removeFromCart('${item.article}')">–í–∏–¥–∞–ª–∏—Ç–∏</button>
            `;
            cartItemsDiv.appendChild(itemDiv);
        });
        cartTotal.textContent = `${cart.total} –≥—Ä–Ω`;
    } else {
        cartItemsDiv.innerHTML = "<p>–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.</p>";
        cartTotal.textContent = `0 –≥—Ä–Ω`;
    }
}

function updateCartCount() {
    const cart = JSON.parse(localStorage.getItem('cart')) || { items: [], total: 0 };
    const cartCount = cart.items.reduce((count, item) => count + item.quantity, 0);
    document.getElementById('cart-count').textContent = cartCount;
}


function addToCart(article, modification = null) {
    const product = products.find(product => product.article === article);
    if (!product) return;

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞: —è–∫—â–æ —Ç–æ–≤–∞—Ä –º–∞—î –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—ó, –∞–ª–µ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—é –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ
    if (product.modifications && product.modifications.length > 0 && !modification) {
        // Display the pointing hand and message
        const detailButton = document.querySelector(`[onclick="openProductDetailModal('${article}')"]`);
        if (detailButton) {
            // Check if the notification already exists
            let notification = detailButton.parentElement.querySelector('.modification-notification');
            if (!notification) {
                notification = document.createElement('div');
                notification.classList.add('modification-notification');
                notification.innerHTML = `
                    <span>üëâ</span> <span>–í–∏–±–µ—Ä—ñ—Ç—å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—é</span>
                `;
                detailButton.parentElement.appendChild(notification);

                // Automatically remove the notification after 3 seconds
                setTimeout(() => notification.remove(), 3000);
            }
        }
        return;
    }

    let cart = JSON.parse(localStorage.getItem('cart')) || { items: [], total: 0 };

    const existingProduct = cart.items.find(item => item.article === product.article && item.modification === modification);
    if (existingProduct) {
        existingProduct.quantity += 1;
    } else {
        const newProduct = { ...product, quantity: 1, modification }; // –î–æ–¥–∞—î–º–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—é
        cart.items.push(newProduct);
    }

    cart.total = cart.items.reduce((total, item) => total + item.price * item.quantity, 0);

    localStorage.setItem('cart', JSON.stringify(cart));
    updateCartDisplay();
    updateCartCount();
}

function removeFromCart(article) {
    const cart = JSON.parse(localStorage.getItem('cart')) || { items: [], total: 0 };

    const itemIndex = cart.items.findIndex(item => item.article === article);
    if (itemIndex !== -1) {
        const removedItem = cart.items.splice(itemIndex, 1);
        cart.total -= removedItem[0].price * removedItem[0].quantity;

        localStorage.setItem('cart', JSON.stringify(cart));
        updateCartDisplay();
        updateCartCount(); // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
    }
}

// –û–Ω–æ–≤–ª—é–π—Ç–µ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
window.onload = function () {
    updateCartDisplay();
    updateCartCount(); // –î–æ–¥–∞—î–º–æ –≤–∏–∫–ª–∏–∫ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞
};

function goToCart() {
    window.location.href = 'cart.html';
}

function clearCart() {
    localStorage.removeItem('cart');
    updateCartDisplay();
}
function addModificationField() {
    const container = document.getElementById("modifications-container");
    const newField = document.createElement("div");
    newField.className = "modification-field";
    newField.innerHTML = `
        <input type="text" name="modification" placeholder="–í–≤–µ–¥—ñ—Ç—å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—é">
        <button type="button" onclick="removeField(this)">-</button>
    `;
    container.appendChild(newField);
}

function removeField(button) {
    const field = button.parentElement;
    field.remove();
}

function openProductDetailModal(article) {
    // –ó–Ω–∞–π–¥–µ–º–æ —Ç–æ–≤–∞—Ä –∑–∞ –∞—Ä—Ç–∏–∫—É–ª–æ–º
    const product = products.find(product => product.article === article);
    if (!product) return;

    const productModal = document.getElementById('productDetailModal');

    // –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ç–æ–≤–∞—Ä
    document.getElementById('detail-product-name').innerText = product.name;
    document.getElementById('detail-product-description').innerText = product.description;
    document.getElementById('detail-product-price').innerText = `${product.price} –≥—Ä–Ω`;

    // –ì–∞–ª–µ—Ä–µ—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –∞–±–æ –≤—ñ–¥–µ–æ
    const gallery = product.files.map(file => {
        const fileExtension = file.split('.').pop().toLowerCase();
        const fileUrl = `https://fursik-b40362fa22e8.herokuapp.com/${file}`;

        if (['jpg', 'jpeg', 'png', 'gif'].includes(fileExtension)) {
            return `<img src="${fileUrl}" alt="${product.name}" class="gallery-img">`;
        } else if (['mp4', 'avi', 'webm'].includes(fileExtension)) {
            return `<video controls class="gallery-video">
                        <source src="${fileUrl}" type="video/${fileExtension}">
                    </video>`;
        } else {
            return `<a href="${fileUrl}" target="_blank">–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ñ–∞–π–ª</a>`;
        }
    }).join('');
    document.getElementById('detail-product-gallery').innerHTML = gallery;

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ–π
    const modificationsContainer = document.getElementById('detail-product-modifications');
    if (product.modifications && product.modifications.length > 0) {
        const modificationsHTML = product.modifications.map(mod => `
            <button class="modification-btn" onclick="selectProductModification('${mod}', this)">${mod}</button>
        `).join('');
        modificationsContainer.innerHTML = modificationsHTML;
    } else {
        modificationsContainer.innerHTML = '<p>–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ</p>';
    }

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    productModal.style.display = 'flex';
    productModal.classList.add('active');

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∞—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä—É –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó "–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫"
    window.currentDetailModalProductArticle = product.article;
    window.currentSelectedModification = null; // –°–∫–∏–¥–∞—î–º–æ –≤–∏–±—Ä–∞–Ω—É –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—é
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–±–æ—Ä—É –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
function selectProductModification(modification, button) {
    // –ó–Ω—ñ–º–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∑ —É—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫
    const buttons = document.querySelectorAll('.modification-btn');
    buttons.forEach(btn => btn.classList.remove('active'));

    // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π —Å—Ç–∏–ª—å –¥–æ –≤–∏–±—Ä–∞–Ω–æ—ó –∫–Ω–æ–ø–∫–∏
    button.classList.add('active');

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∏–±—Ä–∞–Ω—É –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—é
    window.currentSelectedModification = modification;
}
// –§—É–Ω–∫—Ü—ñ—è –∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
function closeProductDetailModal() {
    const productModal = document.getElementById('productDetailModal');
    productModal.classList.remove('active');
    productModal.style.display = 'none';
}
function animateAddToCart(button) {
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–æ–∑–∏—Ü—ñ—ó –∫–Ω–æ–ø–∫–∏ —Ç–∞ —ñ–∫–æ–Ω–∫–∏ –∫–æ—à–∏–∫–∞
    const cartIcon = document.getElementById('cart-icon-img');
    const cartIconRect = cartIcon.getBoundingClientRect();
    const buttonRect = button.getBoundingClientRect();

    // –°—Ç–≤–æ—Ä—é—î–º–æ –ª—ñ—Ç–∞—é—á–∏–π –µ–ª–µ–º–µ–Ω—Ç
    const flyingItem = document.createElement('div');
    flyingItem.classList.add('flying-item');
    document.body.appendChild(flyingItem);

    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É –ø–æ–∑–∏—Ü—ñ—é –ª—ñ—Ç–∞—é—á–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
    flyingItem.style.left = buttonRect.left + (buttonRect.width / 2) + 'px';
    flyingItem.style.top = buttonRect.top + (buttonRect.height / 2) + 'px';

    // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –∑–º—ñ—â–µ–Ω–Ω—è
    const deltaX = cartIconRect.left + (cartIconRect.width / 2) - (buttonRect.left + (buttonRect.width / 2));
    const deltaY = cartIconRect.top + (cartIconRect.height / 2) - (buttonRect.top + (buttonRect.height / 2));

    // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é
    flyingItem.animate([
        { transform: 'translate(0, 0)', opacity: 1 },
        { transform: `translate(${deltaX}px, ${deltaY}px)`, opacity: 0.5 }
    ], {
        duration: 800,
        easing: 'ease-in-out'
    });

    // –í–∏–¥–∞–ª—è—î–º–æ –ª—ñ—Ç–∞—é—á–∏–π –µ–ª–µ–º–µ–Ω—Ç –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
    setTimeout(() => {
        flyingItem.remove();
        // –î–æ–¥–∞—î–º–æ –µ—Ñ–µ–∫—Ç –ø—ñ–¥—Å—Ç—Ä–∏–±—É–≤–∞–Ω–Ω—è –¥–æ —ñ–∫–æ–Ω–∫–∏ –∫–æ—à–∏–∫–∞
        cartIcon.classList.add('bounce');
        setTimeout(() => {
            cartIcon.classList.remove('bounce');
        }, 500);
    }, 800);
}

// –§—É–Ω–∫—Ü—ñ—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –¥–æ –∫–æ—à–∏–∫–∞ –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ–π
function addToCartFromDetailModal(button) {
    const article = window.currentDetailModalProductArticle;
    const selectedModification = window.currentSelectedModification;

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ–π —Ç–∞ –≤–∏–±–æ—Ä—É
    const product = products.find(product => product.article === article);
    if (product.modifications && product.modifications.length > 0 && !selectedModification) {
        // Display the pointing hand and message
        const modalContent = button.parentElement; // Parent element inside the modal
        let notification = modalContent.querySelector('.modification-notification');

        // Check if the notification already exists
        if (!notification) {
            notification = document.createElement('div');
            notification.classList.add('modification-notification');
            notification.innerHTML = `
                <span>üëâ</span> <span>–í–∏–±–µ—Ä—ñ—Ç—å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—é</span>
            `;
            modalContent.appendChild(notification);

            // Automatically remove the notification after 3 seconds
            setTimeout(() => notification.remove(), 3000);
        }
        return;
    }

    // –î–æ–¥–∞—î–º–æ —Ç–æ–≤–∞—Ä –¥–æ –∫–æ—à–∏–∫–∞
    if (article) {
        addToCart(article, selectedModification);
        animateAddToCart(button);
        closeProductDetailModal();
    }
}
let products = [];

async function loadProducts() {
    try {
        const response = await fetch('https://fursik-b40362fa22e8.herokuapp.com/products');
        if (!response.ok) throw new Error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤');
        products = await response.json();
        renderProducts(products);
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', error);
        document.getElementById('product-list').innerHTML = '<p>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤</p>';
    }
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤
function renderProducts(products) {
    const productList = document.getElementById('product-list');
    productList.innerHTML = '';

    products.forEach((product, index) => {
        const oldPriceHTML = product.oldPrice ? `<span class="old-price">${product.oldPrice} –≥—Ä–Ω</span>` : '';
        const newPriceHTML = `<span class="new-price">${product.price} –≥—Ä–Ω</span>`;
        const shortDescription = product.description.length > 100
            ? product.description.substring(0, 100) + '...'
            : product.description;

        const gallery = product.files.map((file, fileIndex) => {
            const fileExtension = file.split('.').pop().toLowerCase();
            const fileUrl = `https://fursik-b40362fa22e8.herokuapp.com/${file}`;

            if (['mp4', 'mov', 'avi', 'webm'].includes(fileExtension)) {
                return `
                    <video data-file-index="${fileIndex}" class="media-file" controls  display: ${fileIndex === 0 ? 'block' : 'none'};">
                        <source src="${fileUrl}" type="video/${fileExtension}">
                        –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—å–æ–≥–æ –≤—ñ–¥–µ–æ.
                    </video>
                `;
            } else if (['jpg', 'jpeg', 'png', 'gif', 'bmp'].includes(fileExtension)) {
                return `
                    <img data-file-index="${fileIndex}" class="media-file" src="${fileUrl}"  display: ${fileIndex === 0 ? 'block' : 'none'};" alt="${product.name}">
                `;
            } else {
                return `<a href="${fileUrl}" target="_blank" class="media-file" style="display: ${fileIndex === 0 ? 'block' : 'none'};">–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ñ–∞–π–ª</a>`;
            }
        }).join('');

        const navigationButtons = product.files.length > 1
            ? `
                <button class="navigation-btn" onclick="changeMedia(${index}, -1)">–ù–∞–∑–∞–¥</button>
                <button class="navigation-btn" onclick="changeMedia(${index}, 1)">–î–∞–ª—ñ</button>
            `
            : '';

        productList.innerHTML += `
            <div class="product-item">
                <h3>${product.name}</h3>
                <p>–ê—Ä—Ç–∏–∫—É–ª: ${product.article}</p>
                <div id="media-${index}" class="image-gallery" data-product-index="${index}">${gallery}</div>
                ${navigationButtons}
                <p id="description-${index}">${shortDescription}</p>
                <button onclick="openProductDetailModal('${product.article}')">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</button>
                <div class="prices">
                    ${oldPriceHTML} ${newPriceHTML}
                </div>
                <button onclick="addToCart('${product.article}')">–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button>
            </div>
        `;
    });

    enableSwipe(); // –î–æ–¥–∞—î–º–æ –ø—ñ–¥—Ç—Ä–∏–º–∫—É —Å–≤–∞–π–ø—ñ–≤ –¥–ª—è –≤—Å—ñ—Ö —Ç–æ–≤–∞—Ä—ñ–≤
}

function addProduct(event) {
    event.preventDefault();

    const name = document.getElementById("new-name").value;
    const price = parseFloat(document.getElementById("new-price").value);
    const description = document.getElementById("new-description").value;
    const fileInput = document.getElementById("new-file");

    const formData = new FormData();
    formData.append('name', name);
    formData.append('price', price);
    formData.append('description', description);

    for (let i = 0; i < fileInput.files.length; i++) {
        formData.append('file', fileInput.files[i]);
    }

    fetch('https://fursik-b40362fa22e8.herokuapp.com/upload', {
        method: 'POST',
        body: formData,
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            document.getElementById('status').textContent = '–§–∞–π–ª(–∏) —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!';
            loadProducts();
            document.getElementById("add-product-form").reset();
        } else {
            document.getElementById('status').textContent = '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ñ–∞–π–ª—É.';
        }
    })
    .catch(error => {
        document.getElementById('status').textContent = '–ü–æ–º–∏–ª–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.';
        console.error('Error:', error);
    });
}

function changeMedia(productIndex, direction) {
    const mediaContainer = document.querySelector(`.image-gallery[data-product-index="${productIndex}"]`);
    if (!mediaContainer) return;

    const mediaFiles = mediaContainer.querySelectorAll('.media-file');
    const currentFileIndex = Array.from(mediaFiles).findIndex(file => file.style.display === 'block');

    // –û–±—á–∏—Å–ª—é—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —ñ–Ω–¥–µ–∫—Å
    let nextFileIndex = currentFileIndex + direction;
    if (nextFileIndex < 0) nextFileIndex = mediaFiles.length - 1;
    if (nextFileIndex >= mediaFiles.length) nextFileIndex = 0;

    // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
    mediaFiles.forEach((file, index) => {
        file.style.display = index === nextFileIndex ? 'block' : 'none';
    });
}
function toggleView() {
    const productGrid = document.getElementById('product-list');
    const toggleBtn = document.getElementById('view-toggle-btn');

    // –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –∫–ª–∞—Å—É –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
    if (productGrid.classList.contains('two-columns')) {
        productGrid.classList.remove('two-columns');
        toggleBtn.textContent = '–ó–º—ñ–Ω–∏—Ç–∏ –≤–∏–¥'; // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    } else {
        productGrid.classList.add('two-columns');
        toggleBtn.textContent = '–ü–æ–≤–µ—Ä–Ω—É—Ç–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –≤–∏–≥–ª—è–¥';
    }
}
document.addEventListener("DOMContentLoaded", function () {
    const toggleButton = document.getElementById("view-toggle-btn");
    const originalOffsetTop = toggleButton.offsetTop; // –ü–æ—á–∞—Ç–∫–æ–≤–µ –ø–æ–ª–æ–∂–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏

    window.addEventListener("scroll", function () {
        if (window.scrollY > originalOffsetTop) {
            toggleButton.classList.add("fixed");
        } else {
            toggleButton.classList.remove("fixed");
        }
    });
});

function hideNavigationButtonsForTouchDevices() {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Å–µ–Ω—Å–æ—Ä–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π
    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;

    if (isTouchDevice) {
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" —ñ "–î–∞–ª—ñ"
        const navigationButtons = document.querySelectorAll('.navigation-btn');

        // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è
        navigationButtons.forEach(button => {
            button.classList.add('touch-hidden');
        });
    }
}

// –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', hideNavigationButtonsForTouchDevices);
window.addEventListener('resize', hideNavigationButtonsForTouchDevices);

function enableSwipe() {
    const allMediaContainers = document.querySelectorAll('.image-gallery'); // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –≥–∞–ª–µ—Ä–µ—ó

    allMediaContainers.forEach((mediaContainer) => {
        let startX = 0;
        let endX = 0;
        const productIndex = mediaContainer.getAttribute('data-product-index'); // –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω–¥–µ–∫—Å –ø—Ä–æ–¥—É–∫—Ç—É

        // –ü–æ—á–∞—Ç–æ–∫ —Å–≤–∞–π–ø—É
        mediaContainer.addEventListener('touchstart', (e) => {
            startX = e.touches[0].clientX;
        });

        // –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Å–≤–∞–π–ø—É
        mediaContainer.addEventListener('touchend', (e) => {
            endX = e.changedTouches[0].clientX;

            const swipeDistance = endX - startX;
            if (swipeDistance > 50) {
                // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ (–Ω–∞–∑–∞–¥)
                changeMedia(productIndex, -1);
            } else if (swipeDistance < -50) {
                // –°–≤–∞–π–ø –≤–ª—ñ–≤–æ (–≤–ø–µ—Ä–µ–¥)
                changeMedia(productIndex, 1);
            }
        });
    });
}

function toggleDescription(index) {
    const descriptionElement = document.getElementById(`description-${index}`);
    const toggleButton = document.getElementById(`toggle-btn-${index}`);
    const product = products[index];

    if (toggleButton.innerText === "–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ") {
        descriptionElement.textContent = product.description;
        toggleButton.innerText = "–ó–≥–æ—Ä–Ω—É—Ç–∏";
    } else {
        const shortDescription = product.description.length > 100
            ? product.description.substring(0, 100) + '...'
            : product.description;
        descriptionElement.textContent = shortDescription;
        toggleButton.innerText = "–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ";
    }
}
function filterProductsByArticlePrefix(prefix) {
    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç–æ–≤–∞—Ä–∏ –∑–∞ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º –∞—Ä—Ç–∏–∫–ª—è
    const filteredProducts = products.filter(product => 
        product.article && product.article.startsWith(prefix)
    );

    const productList = document.getElementById('product-list');
    
    if (filteredProducts.length === 0) {
        productList.innerHTML = '<p>–¢–æ–≤–∞—Ä—ñ–≤ –∑–∞ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>';
    } else {
        renderProducts(filteredProducts); // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤

        // –ü–ª–∞–≤–Ω–∏–π –ø–µ—Ä–µ—Ö—ñ–¥ –¥–æ –ø–µ—Ä—à–æ–≥–æ —Ç–æ–≤–∞—Ä—É
        setTimeout(() => {
            const firstProduct = productList.querySelector('.product-item');
            if (firstProduct) {
                firstProduct.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
        }, 100); // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞, —â–æ–± DOM –≤—Å—Ç–∏–≥ –æ–Ω–æ–≤–∏—Ç–∏—Å—è
    }
}

async function renderPromoProducts() {
    const promoSection = document.getElementById('promo-products');
    const promoWrapper = promoSection.querySelector('.promo-products-wrapper');
    
    try {
        const response = await fetch('https://fursik-b40362fa22e8.herokuapp.com/products');
        if (!response.ok) throw new Error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤');

        const products = await response.json();

        const promoProducts = products.filter(product => product.oldPrice && product.price < product.oldPrice);

        if (promoProducts.length === 0) {
            promoWrapper.innerHTML = '<p>–ù–µ–º–∞—î –∞–∫—Ü—ñ–π–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤.</p>';
            return;
        }

        promoProducts.forEach(product => {
            const oldPriceHTML = product.oldPrice ? `<span class="old-price">${product.oldPrice} –≥—Ä–Ω</span>` : '';
            const newPriceHTML = `<span class="new-price">${product.price} –≥—Ä–Ω</span>`;

            const gallery = product.files.map((file, fileIndex) => {
                const fileExtension = file.split('.').pop().toLowerCase();
                const fileUrl = `https://fursik-b40362fa22e8.herokuapp.com/${file}`;

                if (['mp4', 'mov', 'avi'].includes(fileExtension)) {
                    return `
                        <video controls class="gallery-img" style="width:300px; height:300px; display: ${fileIndex === 0 ? 'block' : 'none'};">
                            <source src="${fileUrl}" type="video/${fileExtension}">
                            –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—å–æ–≥–æ –≤—ñ–¥–µ–æ.
                        </video>
                    `;
                } else if (['png', 'jpg', 'jpeg', 'gif'].includes(fileExtension)) {
                    return `
                        <img src="${fileUrl}" class="gallery-img" alt="Product image" style="width:300px; height:300px; display: ${fileIndex === 0 ? 'block' : 'none'};" data-file-index="${fileIndex}">
                    `;
                } else {
                    return `<p>–ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–π —Ç–∏–ø —Ñ–∞–π–ª—É: ${file}</p>`;
                }
            }).join('');

            const shortDescription = product.description.length > 100
                ? product.description.substring(0, 100) + '...'
                : product.description;

            promoWrapper.innerHTML += `
                <div class="promo-item">
                    <h3>${product.name}</h3>
                    <p>–ê—Ä—Ç–∏–∫—É–ª: ${product.article}</p>
                    <div class="image-gallery">${gallery}</div>
                    <div class="prices">${oldPriceHTML} ${newPriceHTML}</div>
                    <p>${shortDescription}</p>
                    <button onclick="openProductDetailModal('${product.article}')">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</button>
                    <button onclick="addToCart('${product.article}')">–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button>
                </div>
            `;
        });
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∞–∫—Ü—ñ–π–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤:', error);
        promoWrapper.innerHTML = '<p>–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∞–∫—Ü—ñ–π–Ω—ñ —Ç–æ–≤–∞—Ä–∏.</p>';
    }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤–ª—ñ–≤–æ
function scrollLeft() {
    const promoWrapper = document.querySelector('.promo-products-wrapper');
    promoWrapper.scrollBy({ left: -300, behavior: 'smooth' });
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤–ø—Ä–∞–≤–æ
function scrollRight() {
    const promoWrapper = document.querySelector('.promo-products-wrapper');
    promoWrapper.scrollBy({ left: 300, behavior: 'smooth' });
}

document.addEventListener('DOMContentLoaded', renderPromoProducts);

document.querySelectorAll('.nav-bar a').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault(); // –ó–∞–ø–æ–±—ñ–≥–∞—î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –ø–µ—Ä–µ—Ö–æ–¥—É
        const targetId = this.getAttribute('href').substring(1); // –û—Ç—Ä–∏–º—É—î ID —Ä–æ–∑–¥—ñ–ª—É
        const targetElement = document.getElementById(targetId);

        if (targetElement) {
            targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    });
});

// –î–æ–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–æ–≥–æ—Ä–∏
document.addEventListener("DOMContentLoaded", function () {
    const scrollToTopBtn = document.getElementById("scroll-to-top");

    // –ü–æ–∫–∞–∑–∞—Ç–∏/–ø—Ä–∏—Ö–æ–≤–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    window.addEventListener("scroll", function () {
        if (window.scrollY > 500) {
            scrollToTopBtn.style.opacity = "1";
            scrollToTopBtn.style.visibility = "visible";
        } else {
            scrollToTopBtn.style.opacity = "0";
            scrollToTopBtn.style.visibility = "hidden";
        }
    });

    // –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–∏ –¥–æ–≥–æ—Ä–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ
    scrollToTopBtn.addEventListener("click", function () {
        window.scrollTo({
            top: 0,
            behavior: "smooth" // –ü–ª–∞–≤–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
        });
    });
});


// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', () => {
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ —ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—à–∏–∫–∞
    loadProducts().then(() => {
        renderPromoProducts(products);
    });
    updateCartDisplay();
});

